# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17WSMb324qvqHolXotYubMwmWc41nzXcr
"""

from flask import Flask, request, jsonify
import cv2
import numpy as np
import pickle
from deepface import DeepFace

app = Flask(__name__)

# Cargar base de datos de referencia
with open('deepface_database_paths.pkl', 'rb') as f:
    database = pickle.load(f)

@app.route('/recognize', methods=['POST'])
def recognize():
    file = request.files['image']
    npimg = np.frombuffer(file.read(), np.uint8)
    frame = cv2.imdecode(npimg, cv2.IMREAD_COLOR)

    best_match = None
    best_result = None

    for identity, ref_list in database.items():
        ref_img = ref_list[0]  # Usa la primera imagen de referencia por persona
        result = DeepFace.verify(img1_path=frame, img2_path=ref_img, model_name='Facenet', enforce_detection=False)
        if result['verified']:
            best_match = identity
            best_result = result
            break

    if best_match:
        return jsonify({"identity": best_match, "distance": best_result['distance'], "verified": True})
    else:
        return jsonify({"identity": "unknown", "verified": False})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)